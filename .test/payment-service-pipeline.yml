name: PAYMENT SERVICE CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'PAYMENT-SERVICE/**'
      - 'docker/backend/payment-service/**'
      - 'docker-compose.yml'
      - '.github/workflows/payment-service-*.yml'

jobs:
  test-and-build:
    runs-on: self-hosted
    name: Test and Build
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'

      - name: Run tests and build
        run: |
          cd PAYMENT-SERVICE
          ./mvnw clean verify package

      - name: Extract version
        id: get_version  # Add ID to reference this step
        run: |
          cd PAYMENT-SERVICE
          VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"  # Debug output

  docker-publish:
    needs: test-and-build
    runs-on: self-hosted
    name: Build and Publish Docker Image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: PAYMENT-SERVICE
          file: docker/backend/payment-service/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/payment-service:${{ needs.test-and-build.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/payment-service:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ needs.test-and-build.outputs.version }}

  deploy:
    name: Deploy payment service
    runs-on: self-hosted
    needs: [ docker-publish ]
    steps:
      - name: Add ssh key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AZURE_SSH_KEY }}

      - name: Create deployment folder
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }} "mkdir -p ci-cd"

      - name: Copy compose file
        run: scp docker-compose.yml ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }} <<EOF
            cd ci-cd
            docker-compose -f docker-compose.yml pull -q
            docker-compose -f docker-compose.yml up -d
          EOF