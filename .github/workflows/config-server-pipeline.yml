name: CONFIG SERVER CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'CONFIG-SERVER/**'
      - 'docker/backend/config-service/**'
      - 'docker-compose.yml'
      - '.github/workflows/config-server-*.yml'

jobs:
  compile:
    runs-on: self-hosted
    name: Compile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Compile project
        run: |
          cd CONFIG-SERVER
          ./mvnw clean compile

  unit-tests:
    runs-on: self-hosted
    name: Unit Tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Running unit tests
        run: |
          cd CONFIG-SERVER
          ./mvnw clean test

  build:
    runs-on: self-hosted
    name: Build
    needs: [ compile, unit-tests ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build project
        run: |
          cd CONFIG-SERVER
          ./mvnw clean package

  build-image:
    runs-on: self-hosted
    name: Build Docker Image
    needs: [ build ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build project
        run: |
          cd CONFIG-SERVER
          ./mvnw clean package

      - name: Extract project version
        id: extract_version
        run: |
          cd CONFIG-SERVER
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image to dockerhub
        uses: docker/build-push-action@v5
        with:
          context: CONFIG-SERVER
          file: docker/backend/discovery-service/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKER_USERNAME }}/config-service:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKER_USERNAME }}/config-service:${{github.run_id}}
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
            
            
  deploy:
    name: Deploy config server
    runs-on: self-hosted
    needs: [ build-image ]
    steps:
      - name: Add ssh key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AZURE_SSH_KEY }}

      - name: Create deployment folder
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }} "mkdir -p ci-cd"

      - name: Copy compose file
        run: scp docker-compose.yml ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }} <<EOF
            cd ci-cd
            docker-compose -f docker-compose.yml pull -q
            docker-compose -f docker-compose.yml up -d
          EOF